{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ellen\\\\Code\\\\shower-power\\\\src\\\\App.js\";\nimport React from 'react';\n\nconst axios = require('axios');\n\nimport Button from './Button';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleShower = () => {\n      this.state.showerIsOn ? this.startShower() : this.endShower();\n      this.setState({\n        showerIsOn: !this.state.showerIsOn\n      });\n    };\n\n    this.endShower = () => {\n      // calculate a duration and add to the record\n      this.setState({\n        showerEndedAt: Date.now()\n      });\n      const duration = Date.now() - this.state.showerStartedAt; // fetch(`https://shower-power.herokuapp.com/api/v1/showers/${this.state.currentShowerId}`, {\n      //   method: 'PATCH',\n      //   body: JSON.stringify({duration}),\n      //   headers: {\"Content-Type\": \"application/json\"}\n      // })\n    };\n\n    this.calculateDuration = () => {\n      let duration = this.state.showerEndedAt - this.state.showerStartedAt;\n      const hoursDifference = Math.floor(duration / 1000 / 60 / 60);\n      duration -= hoursDifference * 1000 * 60 * 60;\n      const minutesDifference = Math.floor(duration / 1000 / 60);\n      duration -= minutesDifference * 1000 * 60;\n      const secondsDifference = Math.floor(duration / 1000);\n      this.setState({\n        durationMessage: \"\".concat(hoursDifference, \" hours \").concat(minutesDifference, \" minutes \").concat(secondsDifference, \" seconds\")\n      });\n    };\n\n    this.state = {\n      showerIsOn: false,\n      currentShowerId: null,\n      showerStartedAt: null,\n      showerEndedAt: null,\n      durationMessage: ''\n    };\n  }\n\n  startShower() {\n    // set this.state.showerStartedAt to the current timestamp\n    this.setState({\n      showerStartedAt: Date.now()\n    });\n    axios.post('https://shower-power.herokuapp.com/api/v1/showers', {}).then(res => console.log(res)); // const response = fetch('https://shower-power.herokuapp.com/api/v1/showers',{\n    //   method: 'POST',\n    //   body: JSON.stringify({}),\n    //   headers: {\"Content-Type\": \"application/json\"}\n    // })\n    // .then(response => {return response})\n    // console.log(response)\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: this.state.showerIsOn ? 'turn-shower-on' : 'turn-shower-off',\n      onClick: this.toggleShower,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Ellen\\Code\\shower-power\\src\\App.js"],"names":["React","axios","require","Button","App","Component","constructor","toggleShower","state","showerIsOn","startShower","endShower","setState","showerEndedAt","Date","now","duration","showerStartedAt","calculateDuration","hoursDifference","Math","floor","minutesDifference","secondsDifference","durationMessage","currentShowerId","post","then","res","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAUbC,YAVa,GAUE,MAAM;AACnB,WAAKC,KAAL,CAAWC,UAAX,GAAwB,KAAKC,WAAL,EAAxB,GAA6C,KAAKC,SAAL,EAA7C;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,OAAd;AACD,KAbY;;AAAA,SA4BbE,SA5Ba,GA4BD,MAAM;AAChB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAEC,IAAI,CAACC,GAAL;AAAhB,OAAd;AACA,YAAMC,QAAQ,GAAGF,IAAI,CAACC,GAAL,KAAa,KAAKP,KAAL,CAAWS,eAAzC,CAHgB,CAIhB;AACA;AACA;AACA;AACA;AACD,KArCY;;AAAA,SAuCbC,iBAvCa,GAuCO,MAAM;AACtB,UAAIF,QAAQ,GAAG,KAAKR,KAAL,CAAWK,aAAX,GAA2B,KAAKL,KAAL,CAAWS,eAArD;AACD,YAAME,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAAT,GAAc,EAAd,GAAiB,EAA5B,CAAxB;AACCA,MAAAA,QAAQ,IAAIG,eAAe,GAAC,IAAhB,GAAqB,EAArB,GAAwB,EAApC;AACA,YAAMG,iBAAiB,GAAGF,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAAT,GAAc,EAAzB,CAA1B;AACAA,MAAAA,QAAQ,IAAIM,iBAAiB,GAAC,IAAlB,GAAuB,EAAnC;AACA,YAAMC,iBAAiB,GAAGH,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAApB,CAA1B;AACA,WAAKJ,QAAL,CAAc;AAACY,QAAAA,eAAe,YAAKL,eAAL,oBAA8BG,iBAA9B,sBAA2DC,iBAA3D;AAAhB,OAAd;AACH,KA/CY;;AAEX,SAAKf,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXgB,MAAAA,eAAe,EAAE,IAFN;AAGXR,MAAAA,eAAe,EAAE,IAHN;AAIXJ,MAAAA,aAAa,EAAE,IAJJ;AAKXW,MAAAA,eAAe,EAAE;AALN,KAAb;AAOD;;AAMDd,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKE,QAAL,CAAc;AAACK,MAAAA,eAAe,EAAEH,IAAI,CAACC,GAAL;AAAlB,KAAd;AACAd,IAAAA,KAAK,CAACyB,IAAN,CAAW,mDAAX,EAAgE,EAAhE,EAAoEC,IAApE,CAAyEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAhF,EAHY,CAIZ;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAuBDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWC,UAAX,GAAwB,gBAAxB,GAA2C,iBAAzD;AAA6E,MAAA,OAAO,EAAE,KAAKF,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAxD+B;;AA2DlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nconst axios = require('axios');\n\nimport Button from './Button';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      showerIsOn: false,\n      currentShowerId: null,\n      showerStartedAt: null,\n      showerEndedAt: null,\n      durationMessage: '',\n    }\n  }\n  toggleShower = () => {\n    this.state.showerIsOn ? this.startShower() : this.endShower();\n    this.setState({showerIsOn: !this.state.showerIsOn});\n  }\n\n  startShower (){\n    // set this.state.showerStartedAt to the current timestamp\n    this.setState({showerStartedAt: Date.now()})\n    axios.post('https://shower-power.herokuapp.com/api/v1/showers', {}).then(res => console.log(res))\n    // const response = fetch('https://shower-power.herokuapp.com/api/v1/showers',{\n    //   method: 'POST',\n    //   body: JSON.stringify({}),\n    //   headers: {\"Content-Type\": \"application/json\"}\n    // })\n    // .then(response => {return response})\n    // console.log(response)\n  }\n\n  endShower = () => {\n    // calculate a duration and add to the record\n    this.setState({showerEndedAt: Date.now()})\n    const duration = Date.now() - this.state.showerStartedAt;\n    // fetch(`https://shower-power.herokuapp.com/api/v1/showers/${this.state.currentShowerId}`, {\n    //   method: 'PATCH',\n    //   body: JSON.stringify({duration}),\n    //   headers: {\"Content-Type\": \"application/json\"}\n    // })\n  }\n\n  calculateDuration = () => {\n      let duration = this.state.showerEndedAt - this.state.showerStartedAt;\n     const hoursDifference = Math.floor(duration/1000/60/60);\n      duration -= hoursDifference*1000*60*60\n      const minutesDifference = Math.floor(duration/1000/60);\n      duration -= minutesDifference*1000*60\n      const secondsDifference = Math.floor(duration/1000);\n      this.setState({durationMessage: `${hoursDifference} hours ${minutesDifference} minutes ${secondsDifference} seconds`})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Button type={this.state.showerIsOn ? 'turn-shower-on' : 'turn-shower-off' } onClick={this.toggleShower}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}